syntax = "proto3";

import "google/protobuf/duration.proto";

package qeco.apis.kns.v1;

option go_package = "qeco.dev/apis/kns/v1;v1";

// KNS name service definition.
service NameService {
  // Register a DNS record.
  rpc Register(stream RegisterRequest) returns (stream RegisterResponse);

  // Resolve a DNS name to a list of IP addresses.
  rpc Resolve(ResolveRequest) returns (ResolveResponse);

  // StreamResolve allows caller to continuously subscribe/unsubscribe names to resolve.
  rpc StreamingResolve(stream StreamingResolveRequest) returns (stream StreamingResolveResponse);
}

// Register method request.
message RegisterRequest {
  // Specifies id returned in `RegisterResponse`. It must be empty in the first request, and
  // non-empty in the subsequent requests.
  string id = 1;

  // DNS name to register to the name service.
  string name = 2;

  // IP address to back the DNS name.
  string address = 3;
}

// Register method response.
message RegisterResponse {
  // An immutable request ID associated with this Register streaming call.
  string id = 1;

  // TTL indicates to clients the deadline to send next RegisterRequest upon receiving this
  // RegisterResponse.
  google.protobuf.Duration ttl = 2;
}

// Resolve method request.
message ResolveRequest {
  // DNS name to resolve.
  string name = 1;
}

// Resolve method response.
message ResolveResponse {
  // Identical to the name field in ResolveRequest.
  string name = 1;

  // Resolved IP addresses.
  repeated string addresses = 2;

  // ttl indicates the maximum period the addresses are considered valid.
  google.protobuf.Duration ttl = 3;
}

enum StreamResolveOption {
  // Default value. Shall never be used.
  STREAM_RESOLVE_OPTION_UNSPECIFIED = 0;

  // Resolve names in `names_subscribe` fields.
  STREAM_RESOLVE_OPTION_DELTA = 1;

  // Return resolution results for all names subscribed by this stream.
  STREAM_RESOLVE_OPTION_ALL = 2;
}

// StreamingResolve method request.
message StreamingResolveRequest {
  // Resolve option of this request.
  StreamResolveOption option = 1;

  // Names to subscribe. The callee must include the name resolution results for any name included
  // in this field.
  repeated string names_subscribe = 2;

  // Names to unsubscribe.
  repeated string names_unsubscribes = 3;
}

// StreamResolve method Response.
message StreamingResolveResponse {
  // Indicates resolve option in corresponding StreamingResolveRequest.
  StreamResolveOption option = 1;

  repeated ResolutionUpdate updates = 2;
}

message ResolutionUpdate {
  string name = 1;
  repeated string addresses = 2;
  google.protobuf.Duration ttl = 3;
}
